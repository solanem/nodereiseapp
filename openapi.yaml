openapi: 3.0.1
info:
  description: A simple backend which saves user and the journey the user had made
  version: 1.0.0
  title: Node Reise App
host: https://nodereiseapp.herokuapp.com/
basePath: /
tags:
  - name: journeys
    description: List of journeys
  - name: journey
    description: Simple journey
  - name: login
    description: a user can login to the website

schemes:
  - https
  - http

paths:
  /journeys:
    get:
      tags:
        - journeys
      summary: returns all journes of a user
      description: returns json with multiple journey data sets
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
        '400':
          description: Invalid status value

  /journey:
    post:
      tags:
        - journey
      summary: add single journey of a user
      description: journey holds all data which is needed
        to process the visualisation of a journey
      operationId: name
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: id as primary key for db
          required: true
          type: string
          collectionFormat: single
        - name: name
          in: query
          description: name of the yourney
          required: true
          type: string
          collectionFormat: single
        - name: country
          in: query
          description: country of the journey
          required: true
          type: string
          collectionFormat: single
        - name: startDdate
          in: query
          description: startDate of the journey
          required: true
          type: Date
          collectionFormat: single
        - name: enddate
          in: query
          description: endDate of the journey
          required: true
          type: Date
          collectionFormat: single
      responses:
        '200':
          description: successful operation
          schema:
            type: array
        '400':
          description: Invalid value
      deprecated: false
    put:
      tags:
        - journey
      summary: change a single journey of a user
      description: journey holds all data which is needed
        to process the visualisation of a journey
      operationId: name
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: id as primary key for db
          required: true
          type: string
          collectionFormat: single
        - name: name
          in: query
          description: name of the yourney
          required: true
          type: string
          collectionFormat: single
        - name: country
          in: query
          description: country of the journey
          required: true
          type: string
          collectionFormat: single
        - name: startDdate
          in: query
          description: startDate of the journey
          required: true
          type: Date
          collectionFormat: single
        - name: enddate
          in: query
          description: endDate of the journey
          required: true
          type: Date
          collectionFormat: single
      responses:
        '200':
          description: successful operation
          schema:
            type: array
        '400':
          description: Invalid value
      deprecated: false
    delete:
      tags:
        - journey
      summary: Deletes a journey
      description: ''
      operationId: id
      produces:
        - application/json
      parameters:
        - name: journey
          in: body
          required: true
          type: journey
          description: journey which should be deleted
      responses:
        '400':
          description: Invalid journey supplied
        '404':
          description: journey not found
  /login:
    post:
      tags:
        - login
      summary: login for a user
      description: ''
      operationId: ''
      consumes:
        - body
      produces:
        - application/json
      parameters:
        - name: payload
          in: body
          description: paylod with login data
          required: true
      responses:
        '200':
          description: successful operation

