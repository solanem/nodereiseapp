openapi: 3.0.1
info:
  title: Node Reise App
  description: A simple backend which allows user(s) and their journey(s) to be saved
  version: 1.0.0
servers:
  - url: http://nodereiseapp.herokuapp.com/
  - url: https://nodereiseapp.herokuapp.com/
tags:
  - name: journeys
    description: List of journeys
  - name: journey
    description: Single journey
  - name: login
    description: a user can login to the website
paths:
  /journeys:
    get:
      tags:
        - journeys
      summary: Returns all journeys of a user
      description: returns json with multiple journey data sets
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journey'
        400:
          description: Invalid status value
          content: {}

  /journey:
    post:
      tags:
        - journey
      summary: Adds single journey of a user
      description: journey holds all data which is needed
        to process the visualisation of a journey
      operationId: addJourney
      parameters:
        - name: id
          in: query
          description: id as primary key for db
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: name of the journey
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: country of the journey
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: starting Date of the journey
          required: true
          schema:
            type: string
        - name: endDate
          in: query
          description: ending Date of the journey
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journey'
        400:
          description: Invalid value
          content: {}
      deprecated: false

    put:
      tags:
        - journey
      summary: Edit a journey
      description: This can only be done by the logged in user.
      operationId: editJourney
      parameters:
        - name: id
          in: query
          description: id as primary key for db
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: name of the journey
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: country of the journey
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: starting Date of the journey
          required: true
          schema:
            type: string
        - name: endDate
          in: query
          description: ending Date of the journey
          required: true
          schema:
            type: string
      requestBody:
        description: Updated journey object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Journey'
        required: true
      responses:
        400:
          description: Invalid value
          content: {}
      x-codegen-request-body-name: body

    delete:
      tags:
        - journey
      summary: Deletes a journey
      operationId: deleteJourney
      parameters:
        - name: journey
          in: query
          description: ID of pet to return
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journey'
      responses:
        400:
          description: Invalid journey supplied
          content: {}
        404:
          description: Journey not found
          content: {}

  /login:
    post:
      tags:
        - login
      summary: Log in and get cookie for authentication
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'

components:
  schemas:
    Journey:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        country:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
